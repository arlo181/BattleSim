/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tournament;

import java.awt.Cursor;
import java.io.File;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import javax.swing.SwingWorker;

/**
 *
 * @author Arlo
 */
public class TourneyScreen extends javax.swing.JFrame
{

    TourneyManager tourneyManager;
    Timer timer;

    /**
     * Creates new form TourneyScreen
     */
    public TourneyScreen()
    {
        initComponents();
        updateAllArmies();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        btnStart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fldBestOf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fldMaxScore = new javax.swing.JTextField();
        chkPauseAfter = new javax.swing.JCheckBox();
        chkShowSims = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        listArmies = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStart.setText("Start Tournament");
        btnStart.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnStartActionPerformed(evt);
            }
        });

        jLabel1.setText("Best Of:");

        fldBestOf.setText("1");

        jLabel2.setText("Army Score Cap");

        fldMaxScore.setText("1000");

        chkPauseAfter.setSelected(true);
        chkPauseAfter.setText("Pause After Each Match");
        chkPauseAfter.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                chkPauseAfterActionPerformed(evt);
            }
        });

        chkShowSims.setSelected(true);
        chkShowSims.setText("Show Sims");
        chkShowSims.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                chkShowSimsActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listArmies);

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jScrollPane2.setViewportView(txtOutput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkShowSims)
                            .addComponent(jLabel1)
                            .addComponent(fldBestOf, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(fldMaxScore, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkPauseAfter))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(btnStart)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fldBestOf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fldMaxScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(chkPauseAfter)
                                .addGap(18, 18, 18)
                                .addComponent(chkShowSims)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1)
                                .addGap(18, 18, 18)))
                        .addComponent(btnStart))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnStartActionPerformed
    {//GEN-HEADEREND:event_btnStartActionPerformed
        int maxScore = Integer.parseInt(this.fldMaxScore.getText());
        int bestOf = Integer.parseInt(this.fldBestOf.getText());

        SwingWorker worker = new SwingWorker()
        {
            @Override
            protected Object doInBackground() throws Exception
            {
                boolean showSims = chkShowSims.isSelected();
                boolean pausSims = chkShowSims.isSelected() && showSims;
                tourneyManager = new TourneyManager(maxScore, bestOf, showSims, pausSims);
                updateTourneyStatus();
                startTourneyUpdateTimer();
                try
                {
                    tourneyManager.startTournament();
                } catch (Exception ex)
                {
                    ex.printStackTrace();
                    System.out.println(ex.getStackTrace().toString());
                    
                }
                return null;
            }

            @Override
            protected void done()
            {
                timer.cancel();
                updateTourneyStatus();
            }
        };

        worker.execute();
    }//GEN-LAST:event_btnStartActionPerformed

    public void startTourneyUpdateTimer()
    {
        TimerTask timerTask = new TimerTask()
        {
            @Override
            public void run()
            {
                updateTourneyStatus();

            }
        };

        timer = new Timer(true);
        timer.scheduleAtFixedRate(timerTask, 0, 1 * 1000);

    }

    public void updateTourneyStatus()
    {
        if (tourneyManager != null)
        {
            txtOutput.setText(tourneyManager.toString());
        }
    }
    
        public void updateAllArmies()
    {
       DefaultListModel demoList = new DefaultListModel();

        
       File[] armyFiles = TourneyManager.listOfArmyFiles();
       
       for(File file : armyFiles)
       {
           demoList.addElement(file.getName());
       }
       
      this.listArmies.setModel(demoList);
    }

    private void chkShowSimsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_chkShowSimsActionPerformed
    {//GEN-HEADEREND:event_chkShowSimsActionPerformed
        if (!this.chkShowSims.isSelected())
        {
            this.chkPauseAfter.setSelected(false);
        }

    }//GEN-LAST:event_chkShowSimsActionPerformed

    private void chkPauseAfterActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_chkPauseAfterActionPerformed
    {//GEN-HEADEREND:event_chkPauseAfterActionPerformed
        if (!this.chkShowSims.isSelected())
        {
            this.chkPauseAfter.setSelected(false);
        }
    }//GEN-LAST:event_chkPauseAfterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JCheckBox chkPauseAfter;
    private javax.swing.JCheckBox chkShowSims;
    private javax.swing.JTextField fldBestOf;
    private javax.swing.JTextField fldMaxScore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listArmies;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables
}
